{"name": "test_create_new_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=94.0.4606.61)", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cec764ae2f892b15ffa0bded2efc4081\")>\n\n    @allure.feature('Create new user')\n    def test_create_new_user(browser):\n        with allure.step('open main page'):\n            main_page = MainPage(browser)\n            main_page.open_main_page()\n        with allure.step('click on the go to admin button'):\n            main_page = MainPage(browser)\n            main_page.open_login_page()\n        with allure.step('user is on login page'):\n            login_page = LoginPage(browser)\n            login_page.should_be_login_page()\n        with allure.step('user enter admin data'):\n            login_page = LoginPage(browser)\n            login_page.enter_admin_data()\n        with allure.step('admin panel page is open'):\n            admin_page = AdminPage(browser)\n            admin_page.should_be_admin_page()\n        with allure.step('add new user'):\n            admin_page = AdminPage(browser)\n            admin_page.add_user(USER_NAME, PASSWORD)\n        with allure.step('user is added'):\n            admin_page = AdminPage(browser)\n            admin_page.user_is_added(USER_NAME)\n        with allure.step('add permissions for user'):\n            admin_page = AdminPage(browser)\n>           admin_page.add_permission()\n\ntests/test_first_scen.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/admin_page.py:56: in add_permission\n    self.find_element(AdminPageLocators.LOCATOR_CHECKBOX_STAFF).click()\npages/base_page.py:15: in find_element\n    return WebDriverWait(self.driver, time).until(\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:71: in until\n    value = method(self._driver)\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:64: in __call__\n    return _find_element(driver, self.locator)\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:415: in _find_element\n    raise e\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py:411: in _find_element\n    return driver.find_element(*by)\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:976: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107eaf820>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...fff203cb8fc _pthread_start + 224\\\\n18  libsystem_pthread.dylib             0x00007fff203c7443 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=94.0.4606.61)\n\n../../tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchWindowException"}, "steps": [{"name": "open main page", "status": "passed", "start": 1632744780687, "stop": 1632744783489}, {"name": "click on the go to admin button", "status": "passed", "start": 1632744783489, "stop": 1632744783846}, {"name": "user is on login page", "status": "passed", "start": 1632744783846, "stop": 1632744783880}, {"name": "user enter admin data", "status": "passed", "start": 1632744783880, "stop": 1632744784438}, {"name": "admin panel page is open", "status": "passed", "start": 1632744784439, "stop": 1632744784473}, {"name": "add new user", "status": "passed", "start": 1632744784473, "stop": 1632744785025}, {"name": "user is added", "status": "passed", "start": 1632744785025, "stop": 1632744785117}, {"name": "add permissions for user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=94.0.4606.61)\n\n", "trace": "  File \"/Users/natashamiadelets/Desktop/final_task/diplom_nm/tests/test_first_scen.py\", line 36, in test_create_new_user\n    admin_page.add_permission()\n  File \"/Users/natashamiadelets/Desktop/final_task/diplom_nm/pages/admin_page.py\", line 56, in add_permission\n    self.find_element(AdminPageLocators.LOCATOR_CHECKBOX_STAFF).click()\n  File \"/Users/natashamiadelets/Desktop/final_task/diplom_nm/pages/base_page.py\", line 15, in find_element\n    return WebDriverWait(self.driver, time).until(\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 71, in until\n    value = method(self._driver)\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 64, in __call__\n    return _find_element(driver, self.locator)\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 415, in _find_element\n    raise e\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/support/expected_conditions.py\", line 411, in _find_element\n    return driver.find_element(*by)\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 976, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/natashamiadelets/Desktop/tms1_onl/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1632744785117, "stop": 1632744788263}], "start": 1632744780687, "stop": 1632744788274, "uuid": "e070f9c4-dc88-45b9-bc9e-7ffff273c634", "historyId": "b8ace91b044bfdcff1498a74f6009451", "testCaseId": "9044d76d2674e328b385f7172789c0cb", "fullName": "tests.test_first_scen#test_create_new_user", "labels": [{"name": "feature", "value": "Create new user"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_first_scen"}, {"name": "host", "value": "Natashas-MacBook-Pro.local"}, {"name": "thread", "value": "36363-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_first_scen"}]}